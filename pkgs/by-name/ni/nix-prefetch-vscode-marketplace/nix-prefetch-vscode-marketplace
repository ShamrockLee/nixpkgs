#!/usr/bin/env bash

# Adapt from get_vsixpkg() of the original update_install_exts.sh

# shellcheck disable=SC2154

set -eu -o pipefail

source nix-prefetch-vsix-lib.sh

function prepare_vsix_url {
    prepare_vsix_publisher
    prepare_vsix_name
    prepare_vsix_version_specified
    VSIX_URL="https://$VSIX_PUBLISHER.gallery.vsassets.io/_apis/public/gallery/publisher/$VSIX_PUBLISHER/extension/$VSIX_NAME/$VSIX_VERSION_SPECIFIED/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage"
}

VSIX_PUBLISHER=""
VSIX_NAME=""
VSIX_VERSION=""
VSIX_VERSION_SPECIFIED=""
VSIX_VERSION_FETCHED=""
COMPACT=0
ADD_TO_STORE=0
NO_HASH=0
NO_META=0
PRINT_CONFIGURATION=0

# Argc comment tags

# @description
#   Fetch the vscode extension from the official marketplace
#   and print registry attributes in JSON format.
#
#   Note:
#   The VSCode Extension Gallery API is left undocumented,
#   and we could only get the version, the hash, and the manifest (package.json)
#   by downloading the VSIX file directly.
# @arg publisher!
# @arg name!
# @arg version=latest
# @flag -a --add-to-store       Add the downloaded VSIX file to Nix Store.
# @flag -c --compact            Use compact JSON output instead of multi-line output.
# @flag -H --no-hash            Do not print the nix-hash value of this extension.
# @option --hash-algo[md5|sha1|=sha256|sha512]      Hash algorithm of the hash to print.
# @option --hash-format[base16|nix32|base64|=sri]   Hash format of the hash to print.
# @flag -M --no-meta            Do not print the meta attributes of this extension.
# @flag --print-configuration   Print the configuration options of the extension.
# @env TMPDIR=/tmp              Directory to create temporary directories in.

eval "$(argc --argc-eval "$0" "$@")"

VSIX_PUBLISHER="${argc_publisher}"
VSIX_NAME="${argc_name}"
VSIX_VERSION_SPECIFIED="${argc_version}"
ADD_TO_STORE="${argc_add_to_store}"
COMPACT="${argc_compact}"
NO_HASH="${argc_no_hash}"
HASH_ALGO="${argc_hash_algo}"
HASH_FORMAT="${argc_hash_format}"
NO_META="${argc_no_meta}"
PRINT_CONFIGURATION="${argc_print_configuration}"

create_exttmp
trap cleanup EXIT

if ((ADD_TO_STORE)); then
    add_vsix_to_store
fi

print_output
